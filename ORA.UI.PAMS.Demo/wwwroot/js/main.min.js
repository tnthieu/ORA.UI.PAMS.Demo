function onTabChanged(n){let t=1;n!=null&&n.component!=null&&(t=n.component.option("selectedIndex")+1);ResizeTabPanel(t)}function ResizeTabPanel(n){let t=$("#grid-container"+n+" .dx-datagrid-table").width();t<$(window).width()&&(t=$(window).width());$("#tabpanel-container").width(t)}function LoadGrid(){$.ajax({url:"/Home/Grid",method:"GET"}).done(function(n){return $("#grid-container2").html(n),!1}).fail(function(){alert("Postback failed.")})}function onEditorPreparing(n){onEditorPreparingSelection(n);onEditorPreparingComment(n)}function onEditorPreparingComment(n){let t=n.component;n.parentType==="dataRow"&&n.dataField==="Comment"&&(n.editorName="dxHtmlEditor",n.editorOptions.toolbar={items:["bold","italic","strike","underline","link","image"]},n.editorOptions.imageUpload={tabs:["file","url"],fileUploadMode:"base64"},n.editorOptions.mediaResizing={enabled:!0})}function FormatHtml(){$(".Comment").each(function(){let n=$(this).html();n!=null&&(n.includes("&lt;")||n.includes("&gt;"))&&$(this).html(_.unescape(n))})}function onEditorPreparingSelection(n){let t=n.component;n.command==="select"&&(n.parentType==="dataRow"&&n.row?isSelectable(n.row.data)||(n.editorOptions.disabled=!0):n.parentType==="headerRow"&&(n.editorOptions.onInitialized=function(n){selectAllCheckBox=n.component},n.editorOptions.value=isSelectAll(t),n.editorOptions.onValueChanged=function(n){if(!n.event){n.previousValue&&!checkBoxUpdating&&n.component.option("value",n.previousValue);return}isSelectAll(t)!==n.value&&(n.value?t.selectAll():t.deselectAll(),n.event.preventDefault())}))}function isSelectable(n){return n.IsActive}function isSelectAll(n){let t=[];n.getDataSource().store().load().done(function(n){t=n});let r=t.filter(isSelectable),i=n.option("selectedRowKeys");return i.length?i.length>=r.length?!0:undefined:!1}function onSelectionChanged(n){let t=[];n.selectedRowsData.forEach(i=>{isSelectable(i)||t.push(n.component.keyOf(i))});t.length&&n.component.deselectRows(t);checkBoxUpdating=!0;selectAllCheckBox.option("value",isSelectAll(n.component));checkBoxUpdating=!1}function DisplayAllSelectedData(){const t=DevExpress.ui.dxDataGrid.getInstance(document.getElementById("grid1"));let i=t.getSelectedRowsData(),n="";i.forEach(function(t){n+=t.Id+"- "+t.UserName+"<br/>"});DevExpress.ui.dialog.alert(n,"")}function isEditVisible(n){return!n.row.isEditing}function onEditClick(n){n.component.editRow(n.row.rowIndex);n.event.preventDefault()}function isSaveVisible(n){return n.row.isEditing}function onSaveClick(n){ShowConfirmPopup("Confirm Saving","Are you sure you want to save changes?",()=>{isSaveClick=!0,n.component.saveEditData().then(()=>{isSaveClick=!1})});n.event.preventDefault()}function isCancelVisible(n){return n.row.isEditing}function onCancelClick(n){ShowConfirmPopup("Confirm Cancellation","Are you sure you want to cancel?",()=>{isSaveClick=!1,n.component.cancelEditData()});n.event.preventDefault()}function ConfirmCancel(){$("#ConfirmPopup").modal("hide");isSaveClick=!1}function ShowConfirmPopup(n,t,i){$("#ConfirmTitle").text(n);$("#ConfirmContent").text(t);$("#ConfirmPopup").modal("show");$("#ConfirmOK").click(()=>{i(),$("#ConfirmPopup").modal("hide")})}function rowValidating(n){let t=Object.assign(n.oldData,n.newData);console.log("oldData",n.oldData);console.log("newData",n.newData);console.log("changeData",t);const i=$.ajax({url:"/api/SpecialNoteValidate/Row",type:"POST",dataType:"json",contentType:"application/json",data:JSON.stringify(t)});i.done(t=>{t.isValid===!1&&(n.isValid=!1,n.errorText=`Error: ${t.data}`)});n.promise=i}window.addEventListener("resize",onTabChanged);let selectAllCheckBox,checkBoxUpdating=!1;let isSaveClick=!1;