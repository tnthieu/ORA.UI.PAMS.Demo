@using ORA_UI_PAMS_Demo.Models

@(
Html.DevExtreme().DataGrid<SampleOrder>()
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] { 5, 10, 15, 20 });
        pager.ShowInfo(true);
    })

    .ShowBorders(true)
    .ShowColumnLines(true)
    .ShowRowLines(true)

    .WordWrapEnabled(true)
    .AllowColumnResizing(true)

    .DataSource(d => d.Mvc()
        .Controller("SampleData")
        .LoadAction("Get")
        .UpdateAction("Update")
        .InsertAction("Insert")
        .DeleteAction("Delete")
        .Key("Id")
    )

    .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
    .Selection(x => { x.Mode(SelectionMode.Multiple); x.ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.None); })

    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))

    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Row);
        editing.AllowDeleting(true);
        editing.AllowUpdating(true);
    })
    .OnEditorPreparing("onEditorPreparing")

    @*Columns*@
    .Columns(columns =>
    {
        columns.AddFor(m => m.IsImportant).Width(30).CssClass("middle").Caption("").AllowFiltering(false)
        .CellTemplate(@<text>
            <% if(data.IsImportant) { %>
            <span style="color:#FFD700; font-size: 14pt">&star;</span>
            <% } else { %>
            <span></span>
            <% } %>
        </text>);

        @*columns.AddFor(m => m.CreatedDate).Width(130).CssClass("middle").Caption("Created Date").Format("MM/dd/yy hh:mm")
        .EditCellTemplate(@<text>
            <input type="text" value="<%- data.CreatedDate %>" disabled>
        </text>);

        columns.AddFor(m => m.ModifiedDate).Width(145).CssClass("middle").Caption("Latest Updated Date").Format("MM/dd/yy hh:mm")
        .EditCellTemplate(@<text>
            <input type="text" value="<%- data.ModifiedDate %>" disabled>
        </text>);

        columns.AddFor(m => m.UserName).Width(130).CssClass("middle").Caption("User Name")
        .EditCellTemplate(@<text>
            <input type="text" value="<%- data.UserName %>" disabled>
        </text>);*@
        columns.AddFor(m => m.CreatedDate).Width(130).CssClass("middle").AllowEditing(false).Caption("Created Date").Format("MM/dd/yy hh:mm");
        columns.AddFor(m => m.ModifiedDate).Width(145).CssClass("middle").AllowEditing(false).Caption("Latest Updated Date").Format("MM/dd/yy hh:mm");

        columns.AddFor(m => m.UserName).Width(130).CssClass("middle").AllowEditing(false).Caption("User Name");

        columns.AddFor(m => m.Category).Width(130).CssClass("middle").Caption("Category")
            .Lookup(lookup => lookup
                .DataSource(d => d.Mvc().Controller("Category").LoadAction("Get").Key("Id"))
                .DisplayExpr("Name")
                .ValueExpr("Name")
            );

        columns.AddFor(m => m.Comment).Width(150).CssClass("middle").Caption("Comment");

        columns.AddFor(m => m.Fund).Width(70).CssClass("middle-center").Caption("Fund");

        columns.AddFor(m => m.AttachmentName).CssClass("middle-center").Width(120).Caption("Attachments")
        .CellTemplate(@<text>
            <a href="https://www.google.com" target="_blank">Attachments: <%- data.AttachmentCount %></a>
        </text>)
        .EditCellTemplate(@<text>
            <img src="~/img/AwardSynopsis.gif">
        </text>);

        columns.AddFor(m => m.EditComment).Width(80).CssClass("middle-center").AllowEditing(false).Caption("History")
        .CellTemplate(@<text>
            <img src="~/img/CommentGrid.gif">
        </text>);
    })

    @*default*@
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.Id).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)

<script>
    function onEditorPreparing(e) {
        if (e.dataField === "Comment")
            e.editorName = "dxTextArea";
    }
</script>

<style>
    .dx-widget {
        font-size: 9pt;
    }

    /* Customize position of DevExtreme paging icon */
    .dx-pager .dx-page-sizes {
        float: right;
    }

    .dx-pager .dx-pages {
        float: left;
    }

    .col.px-4.py-3.hub-content {
        width: 80% !important;
    }

    .dx-datagrid-content .dx-datagrid-table .dx-row > td, .dx-datagrid-content .dx-datagrid-table .dx-row > tr > td {
        background: white;
    }

    .dx-datagrid-rowsview .dx-selection.dx-row:not(.dx-row-focused) > td, .dx-datagrid-rowsview .dx-selection.dx-row:not(.dx-row-focused) > tr > td, .dx-datagrid-rowsview .dx-selection.dx-row:not(.dx-row-focused):hover > td, .dx-datagrid-rowsview .dx-selection.dx-row:not(.dx-row-focused):hover > tr > td {
        background-color: rgb(255, 255, 153);
    }

    .container, .container-fluid, .container-xxl, .container-xl, .container-lg, .container-md, .container-sm {
        padding-right: 0px !important;
        padding-left: 0px !important;
    }

    tbody .middle {
        vertical-align: middle !important;
    }

    tbody .middle-center {
        text-align: center !important;
        vertical-align: middle !important;
    }

    .dx-datagrid.dx-datagrid-borders > .dx-datagrid-pager {
        order: -1;
        border-top: 0px;
    }

    textarea[aria-label="Filter cell"] {
        resize: none !important;
    }

    textarea:not([aria-label="Filter cell"]) {
        resize: vertical !important;
        /*border: 1px solid gray !important;*/
    }

    /*.dx-texteditor-input-container input[type="text"]:not([aria-label="Filter cell"]) {
        border: 1px solid gray !important;
    }*/
</style>