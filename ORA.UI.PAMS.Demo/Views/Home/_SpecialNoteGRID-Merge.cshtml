@using ORA.UI.PAMS.Demo.Models;

<h1>Merge</h1>

@(
Html.DevExtreme().DataGrid<SpecialNote>()
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] { 5, 10, 15, 20 });
        pager.ShowInfo(true);
    })

    .ShowBorders(true)
    .ShowColumnLines(true)
    .ShowRowLines(true)

    .WordWrapEnabled(true)

    .DataSource(d => d.Mvc()
        .Controller("SpecialNote")
        .LoadAction("Get")
        .UpdateAction("Update")
        .InsertAction("Insert")
        .DeleteAction("Delete")
        .Key("Id")
    )

    .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
    .Selection(x => { x.Mode(SelectionMode.Multiple); x.ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.None); })

    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))

    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Row);
        editing.AllowDeleting(true);
        editing.AllowUpdating(true);
    })
    .OnEditorPreparing("onEditorPreparing")
    .OnCellPrepared("OnCellPrepared")
    .OnContentReady(@<text>
        function(e) {
            ResizeTabPanel(4);
            FormatHtml();
        }
    </text>)
    .Scrolling(x => x.ShowScrollbar(ShowScrollbarMode.Never))

    @*Columns*@
    .Columns(columns =>
    {
        columns.AddFor(m => m.IsImportant).Width(30).CssClass("middle").Caption("").AllowFiltering(false)
        .CellTemplate(@<text>
            <% if(data.IsImportant) { %>
            <span style="color:#FFD700; font-size: 14pt">&star;</span>
            <% } else { %>
            <span></span>
            <% } %>
        </text>);

        columns.AddFor(m => m.CreatedDate).Width(130).CssClass("middle").AllowEditing(false).Caption("Created Date").Format("MM/dd/yy hh:mm");
        columns.AddFor(m => m.ModifiedDate).Width(145).CssClass("middle").AllowEditing(true).Caption("Latest Updated Date").Format("MM/dd/yy hh:mm");

        columns.AddFor(m => m.UserName).Width(130).CssClass("middle").AllowEditing(false).Caption("User Name");

        columns.AddFor(m => m.Category).Width(130).CssClass("middle").Caption("Category")
        .Lookup(lookup => lookup
            .DataSource(d => d.Mvc().Controller("Category").LoadAction("Get").Key("Id"))
            .DisplayExpr("Name")
            .ValueExpr("Name")
        );

        columns.AddFor(m => m.Comment).Width(150).CssClass("middle").Caption("Comment")
        .CellTemplate(@<text>
            <div class="Comment"><%- data.Comment %></div>
        </text>);

        columns.AddFor(m => m.Fund).Width(100).CssClass("middle-center").Caption("Fund")
        .Lookup(lookup => lookup
        .DataSource(d => d.Mvc().Controller("Fund").LoadAction("Get").Key("Id"))
        .DisplayExpr("Name")
        .ValueExpr("Name")
        );

        columns.AddFor(m => m.AttachmentCount).Width(150).Visible(false);
        columns.AddFor(m => m.AttachmentName).CssClass("middle-center").Width(120).Caption("Attachments")
        .CellTemplate(@<text>
            <a href="#" onclick="showPopupAttachment(); return false;" style="cursor: pointer;">Attachments: <%- data.AttachmentCount %></a>
        </text>)
        .EditCellTemplate(@<text>
            <img src="~/img/AwardSynopsis.gif">
        </text>);

        columns.AddFor(m => m.EditComment).Width(80).CssClass("middle-center").AllowEditing(false).Caption("History")
        .CellTemplate(@<text>
            <img onclick="showPopupHistory(); return false;" src="~/img/CommentGrid.gif" style="cursor: pointer;">
        </text>);
    })

    @*default*@
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.Id).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)

@(Html.DevExtreme().Popup()
        .ID("popup-history")
        .Width(900)
        .Height("60%")
        .Container("body")
        .ShowTitle(true)
        .Title("History")
        .DragEnabled(false)
        .HideOnOutsideClick(false)
        .ShowCloseButton(true)
        .Position(positionConfig => positionConfig
            .At(HorizontalAlignment.Center, VerticalAlignment.Center)
            .My(HorizontalAlignment.Center, VerticalAlignment.Center)
            .Collision(PositionResolveCollision.Fit, PositionResolveCollision.Fit)
        )
        .ContentTemplate(@<text>
            <partial name="~/Views/Home/_HistoryGRID.cshtml" />
        </text>)
    )

@(Html.DevExtreme().Popup()
        .ID("popup-attachment")
        .Width(900)
        .Height("60%")
        .Container("body")
        .ShowTitle(true)
        .Title("Attachment")
        .DragEnabled(false)
        .HideOnOutsideClick(false)
        .ShowCloseButton(true)
        .Position(positionConfig => positionConfig
            .At(HorizontalAlignment.Center, VerticalAlignment.Center)
            .My(HorizontalAlignment.Center, VerticalAlignment.Center)
            .Collision(PositionResolveCollision.Fit, PositionResolveCollision.Fit)
        )
        .ContentTemplate(@<text>
            <partial name="~/Views/Home/_AttachmentLIST.cshtml" />
        </text>)
    )

<script>
    function showPopupHistory() {
        var popup = $("#popup-history").dxPopup("instance");
        popup.show();
    }

    function showPopupAttachment() {
        var popup = $("#popup-attachment").dxPopup("instance");
        popup.show();
    }
</script>