@using ORA.UI.PAMS.Demo.Models;

<center>
    <h2>PAMS</h2>
</center>

@(Html.DevExtreme().TabPanel()
                .ID("tabpanel-container")
                .Height("100%")
                .Width("100%")
                .DataSource(new NameValue[2] { new NameValue("Tab1: Partial View", "1"), new NameValue("Tab2: Ajax load", "2") })
                .SelectedIndex(0)
                .Loop(false)
                .AnimationEnabled(true)
                .SwipeEnabled(true)
                .ItemTitleTemplate(@<text>
                    <span><%- Name %></span>
                </text>)
                .ItemTemplate(@<text>
                    <div class="tabpanel-item">
                        <% if(Value == '1') { %>
                        <center>
                            <div id="grid-container1">
                                <partial name="~/Views/Home/_SpecialNoteGRID.cshtml" />
                            </div>
                        </center>
                        <% } else { %>
                        <center>
                                    @(Html.DevExtreme().Button()
                                .Icon("check")
                                .Text("Load Grid from Ajax")
                                .Type(ButtonType.Success)
                                .OnClick("LoadGrid")
                                )
                                <div id="grid-container2">
                                </div>
                            </center>
                            <% } %>
                        </div>
                    </text>)
                    .OnSelectionChanged("onTabChanged")
)

<script>
    function onEditorPreparing(e) {
        if (e.dataField === "Comment") {
            e.editorName = "dxTextArea";
        }

        if (e.command === "select") {
            if (e.parentType === "dataRow" && e.row) {
                e.editorOptions.disabled = !e.row.data.IsActive;
            }
        }
    }
    function onSelectionChanged(e) {
        var deselectRowKeys = [];
        e.selectedRowsData.forEach((item) => {
            if (!item.IsActive)
                deselectRowKeys.push(e.component.keyOf(item));
        });

        if (deselectRowKeys.length) {
            e.component.deselectRows(deselectRowKeys);
        }
    }

    function LoadGrid() {
        let postBackURL = "/Home/Grid";

        $.ajax({
            url: postBackURL,
            method: 'GET'
        })
            .done(function (data) {
                $("#grid-container2").html(data);
                return false;
            })
            .fail(function () {
                alert('Postback failed.');
            })
    }
    function ResizeTabPanel(tab) {
        var width = $("#grid-container" + tab + " .dx-datagrid-table").width();
        if (width < $(window).width())
            width = $(window).width();

        $("#tabpanel-container").width(width);
    }
    function onTabChanged(e) {
        var tab = e.component.option("selectedIndex") + 1;
        ResizeTabPanel(tab);
    }


    //handle event when click save or cancel on gridview
    function onCommandColumnEvent(e) {
        if (e.rowType == "data" && e.column.command == "edit") {
            var cellElement = e.cellElement;

            var btnCancel = cellElement.find(".dx-link-cancel");
            btnCancel.off("click");
            btnCancel.on("click", (arg) => {
                const deferred = $.Deferred();
                const confirmBox = DevExpress.ui.dialog.confirm("Are you sure you want to cancel?", "Confirm Cancellation");
                confirmBox.done((confirmResult) => {
                    if (confirmResult) {
                        e.component.cancelEditData();
                    }
                });
            });

            //var btnSave = cellElement.find(".dx-link-save");
            //btnSave.off("click");
            //btnSave.on("click", (arg) => {
            //    const deferred = $.Deferred();
            //    const confirmBox = DevExpress.ui.dialog.confirm("Are you sure you want to save changes?", "Confirm Saving");
            //    confirmBox.done((confirmResult) => {
            //        if (confirmResult) {
            //            e.component.saveEditData();
            //        }
            //    });
            //});
        }
    }

    function onRowUpdating(e) {
        e.cancel = new Promise(resolve => {
            const confirmBox = DevExpress.ui.dialog.confirm("Are you sure you want to save changes?", "Confirm Saving");
            confirmBox.done(function (dialogResult) {
                var shouldCancelUpdate = !dialogResult;
                resolve(shouldCancelUpdate);
            })
        });
    }
</script>

<style>
    @@media (min-width: 576px) {
        .container-sm, .container {
            max-width: 1920px !important;
        }
    }

    @@media (min-width: 768px) {
        .container-md, .container-sm, .container {
            max-width: 1920px !important;
        }
    }

    @@media (min-width: 992px) {
        .container-lg, .container-md, .container-sm, .container {
            max-width: 1920px !important;
        }
    }

    @@media (min-width: 1400px) {
        .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {
            max-width: 1920px !important;
        }
    }
</style>