@using ORA_UI_PAMS_Demo.Models

<h2>Home</h2>

@(
Html.DevExtreme().DataGrid<SampleOrder>()
    .ShowBorders(true)
    .DataSource(d => d.Mvc()
        .Controller("SampleData")
        .LoadAction("Get")
        .UpdateAction("Update")
        .InsertAction("Insert")
        .DeleteAction("Delete")
        .Key("Id")
    )
    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Row);
        editing.AllowDeleting(true);
        editing.AllowUpdating(true);
    })
    .Columns(columns =>
    {
        columns.AddFor(m => m.IsImportant).Caption("").Width(50)
        .CellTemplate(@<text>
            <% if(data.IsImportant) { %>
            <span style="font-size: 16pt; color:yellow;">&bigstar;</span>
            <% } else { %>
            <div></div>
            <% } %>
        </text>);

        columns.AddFor(m => m.CreatedDate).Caption("Created Date").Format("MM/dd/yy hh:mm");
        columns.AddFor(m => m.ModifiedDate).Caption("Latest Updated Date").Format("MM/dd/yy hh:mm");

        columns.AddFor(m => m.UserName).Caption("User Name");
        columns.AddFor(m => m.Category).Caption("Category");

        columns.AddFor(m => m.Comment).Caption("Comment");
        columns.AddFor(m => m.Fund).Caption("Fund");
        columns.AddFor(m => m.AttachmentName).Caption("Attachments").CellTemplate(@<text>
            <a href="#" onclick="alert('popup...')">Attachments: <%- data.AttachmentCount %></a>            
        </text>);

        columns.AddFor(m => m.EditComment).Caption("History");
    })
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] { 5, 10, 15, 20 });
        pager.ShowInfo(true);
    })
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.Id).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)